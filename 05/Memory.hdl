// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */ 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    /* 根据前3位判断进入哪个区间 */
    DMux8Way(in=load, sel=address[12..14], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    Or8Way(in[0]=a, in[1]=b, in[2]=c, in[3]=d, out=ramload);
    Or8Way(in[0]=e, in[1]=f, out=screenload);
    RAM16K(in=in, load=ramload, address=address[0..13], out=rout);
    Screen(in=in, load=screenload, address=address[0..12], out=sout);
    Keyboard(out=kout);
    Mux8Way16(a=rout, b=rout, c=rout, d=rout, e=sout, f=sout, g=kout, h=false, sel=address[12..14], out=out);
}
